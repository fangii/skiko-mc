import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id "fabric-loom" version "1.9-SNAPSHOT"
	id "org.jetbrains.kotlin.jvm" version "2.1.0"
}

version = project.mod_version
group = project.maven_group
skiko_version = project.skiko_version

base {
	archivesName = project.archives_base_name
}

repositories {
	// The repository where you can get the latest versions of Skiko.
	mavenCentral()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

	// Including the dependencies is necessary, if you don't do that, Minecraft will crash on launch.
	include implementation("org.jetbrains.skiko:skiko-awt:${skiko_version}")

	// Skiko's natives are necessary to run skia on certain devices.
	// However, they cause the final jar to be really big, so feel free to remove those you aren't using.
	include runtimeOnly("org.jetbrains.skiko:skiko-awt-runtime-windows-x64:${skiko_version}")
	include runtimeOnly("org.jetbrains.skiko:skiko-awt-runtime-linux-arm64:${skiko_version}")
	include runtimeOnly("org.jetbrains.skiko:skiko-awt-runtime-macos-arm64:${skiko_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

tasks.withType(KotlinCompile).configureEach {
	kotlinOptions {
		jvmTarget = 21
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}
